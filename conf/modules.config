process {
    // for quality control
    withName: "FASTQC" {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/quality_control/fastqc" },
            mode: params.publish_dir_mode,
            pattern: "*.html"
        ]
        ext.prefix = { "${meta.id}" }
        tag = { "${meta.id}" }
    }

    withName: NANOPLOT {
        ext.args   = {
            [
                "-p ${meta.id}",
                "--title ${meta.id}",
                "-c darkblue",
                "--no_static"
            ].join(' ').trim()
        }
        publishDir = [
            path: { "${params.outdir}/quality_control/nanoplot" },
            mode: params.publish_dir_mode,
            pattern: "*.{html,txt}"
        ]
        ext.prefix = { "${meta.id}" }
        tag = { "${meta.id}" }
    }

    withName: MINIMAP2_ALIGN_RAW {
        ext.args = "-x lr:hq"
        publishDir = [
            [
                path: { "${params.outdir}/quality_control/mappings" },
                mode: params.publish_dir_mode,
                pattern: "*.bam*",
            ]
        ]
        ext.prefix = { "${meta.id}_genome" }
    }

    withName: CHOPPER {
        ext.args2  = [
            params.longreads_min_quality ? "--quality ${params.longreads_min_quality}" : '',
            params.longreads_min_length ? "--minlength ${params.longreads_min_length}" : '',
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/quality_control/Chopper" },
                mode: params.publish_dir_mode,
                pattern: "*.log",
            ]
        ]
        ext.prefix = { "${meta.id}_run${meta.run}_chopper" }
    }

    withName: KRAKENTOOLS_EXTRACTKRAKENREADS {
        ext.args  = "--fastq-output"
    }


    // for mapping and variants part
    withName: MINIMAP2_ALIGN_CLEAN {
        ext.args = "-x lr:hq"
        publishDir = [
            [
                path: { "${params.outdir}/mappings/" },
                mode: params.publish_dir_mode,
                pattern: "*.bam*",
            ]
        ]
        ext.prefix = { "${meta.id}_genome" }
    }

    withName: BEDTOOLS_GENOMECOV {
        ext.args = "-bga"
    }

    withName: CLAIR3 {
        ext.args   = {
            [
                "--no_phasing_for_fa",
                "--include_all_ctgs",
                "--haploid_precise", 
                "--sample_name=${meta.id}",
                "--enable_variant_calling_at_sequence_head_and_tail",
                "--bed_fn=${params.amplicones_bed}"
            ].join(' ').trim()
        }
        publishDir = [
            [
                path: { "${params.outdir}/variant_calling/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.vcf.gz*",
            ]
        ]
        ext.prefix = { "${meta.id}" }
    }

    withName: SNPEFF_DOWNLOAD {
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/cache/" }
        ]
    }

    withName: BCFTOOLS_VIEW {
        ext.args = {
            [
                "--output-type z",
                "-f 'PASS,.'"
            ].join(' ').trim()
        }
    }

    withName: BCFTOOLS_ANNOTATE_POST {
        ext.args = "--output-type z"
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/consensus" },
            pattern: "*.vcf.gz"
        ]
        ext.prefix = { "${meta.id}_consensus" }
    }

    withName: BCFTOOLS_INDEX {
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/consensus" },
            pattern: "*.csi"
        ]
        ext.prefix = { "${meta.id}_consensus" }
    }

    withName: SEQKIT_SUBSEQ {
        ext.prefix = { "${meta.id}_unnamed" }
    }

    withName: SEQKIT_REPLACE {
        ext.args = {
            [
                '-p "^.+\s"',
                "-r '${meta.id}_'"
            ].join(' ').trim()
        }
        ext.prefix = { "${meta.id}_replace" }
    }

    
    withName: BCFTOOLS_CONSENSUS {
        ext.args2 = "--mask-with lc"
    }

    withName: MEDAKA_1 {
        ext.prefix = { "${meta.id}_draft" }
    }

    withName: MEDAKA_2 {
        ext.args = {
            [
                "-r N"
            ].join(' ').trim()
        }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/consensus" },
            pattern: "*.fa"
        ]
        ext.prefix = { "${meta.id}_consensus" }
    }

    // working with clear sequences
    withName: MINIMAP2_ALIGN_CONSENSUS {
        ext.args = "-x lr:hq"
        publishDir = [
            [
                path: { "${params.outdir}/consensus"},
                mode: params.publish_dir_mode,
                pattern: "*.bam*",
            ]
        ]
        ext.prefix = { "${meta.id}_consensus" }
    }

    withName: BEDTOOLS_GENOMECOV_CONSENSUS {
        ext.args = "-bga"
        publishDir = [
            [
                path: { "${params.outdir}/consensus"},
                mode: params.publish_dir_mode,
                pattern: "*.bed",
            ]
        ]
    }

    withName: "MULTIQC" {
        publishDir = [
            path: { "${params.outdir}/quality_control/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
